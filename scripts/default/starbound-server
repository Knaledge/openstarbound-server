#!/bin/bash
. "$(dirname "$0")/common"
. "$(dirname "$0")/defaults"

starbound_server_pid=-1
timeout=60
kill_signal=TERM

cd "$install_path" || fatal "Could not cd $install_path"
starbound_server="$install_path/$starbound_binary_path"

main() {
  waitForServerDownload
  runServer
}

waitForServerDownload() {
  while :; do
    if [ -f "$starbound_server" ]; then
      break
    else
      debug "Starbound server is not yet downloaded - waiting"
      sleep 7
    fi
  done
}

runServer() {
  info "Running starbound-server"
  debug "Server config ServerName:$SERVER_NAME - ServerPort:${SERVER_PORT:-21025} - ServerQueryPort:${SERVER_QUERYPORT:-21025}"

  export STEAM_COMPAT_CLIENT_INSTALL_PATH="/home/starbound/.steam/steam"
  export STEAM_COMPAT_DATA_PATH="$install_path/steamapps/compatdata/$steam_app_id"

  chmod +x "$starbound_server"
  $starbound_server -nographics -batchmode -localhost -startServer -ignorecompilererrors -overrideTerrainData -config "${install_path}/starbound_server.json" &
  starbound_server_pid=$! #TODO: Determine if there are any startup args to pass to Starbound server; determine if 'starbound_server.json' needs to be 'starbound_server.config'
  echo $starbound_server_pid >"$starbound_server_pidfile"

  wait $starbound_server_pid
  debug "starbound-server with PID $starbound_server_pid stopped"

  cleanup
  info "Shutdown complete"
  exit 0
}

cleanup() {
  debug "cleanup pid file"
  clearLock "$starbound_server_pidfile"
}

shutdown() {
  debug "Received signal to shut down starbound-server"
  if [ $starbound_server_pid -eq -1 ]; then
    debug "Starbound server is not running yet - aborting startup"
    exit
  fi
  info "Shutting down Starbound server with PID $starbound_server_pid"
  kill -TERM $starbound_server_pid
  shutdown_timeout=$(($(date +%s) + timeout))
  while [ -d "/proc/$starbound_server_pid" ]; do
    if [ "$(date +%s)" -gt $shutdown_timeout ]; then
      shutdown_timeout=$(($(date +%s) + timeout))
      warn "Timeout while waiting for server to shut down - sending SIG$kill_signal to PID $starbound_server_pid"
      kill -$kill_signal $starbound_server_pid
      case "$kill_signal" in
      INT)
        kill_signal=TERM
        ;;
      *)
        kill_signal=KILL
        ;;
      esac
    fi
    debug "Waiting for Starbound Server with PID $starbound_server_pid to shut down"
    sleep 6
  done
}

trap shutdown SIGINT SIGTERM
main
