#!/bin/bash
. "$(dirname "$0")/common"
. "$(dirname "$0")/defaults"
. "$(dirname "$0")/starbound-updater-shared"

# If OpenStarbound is enabled, also include its shared functions
if [ "${USE_OPENSTARBOUND:-false}" == "true" ]; then
  . "$(dirname "$0")/openstarbound-updater-shared"
fi

main() {
  info "Running starbound-updater"
  update
  info "starbound-updater complete"
}

downloadStarbound() {
  debug "Downloading Starbound server"

  echo "Checking for Docker secrets in /run/secrets"
  ls -l /run/secrets || echo "[DEBUG] /run/secrets does not exist"

  # Read Docker secrets (mounted at /run/secrets/)
  if [ -f /run/secrets/steam_username ]; then
    STEAM_USERNAME=$(cat /run/secrets/steam_username)
  else
    error "Missing secret: steam_username"
    exit 1
  fi

  if [ -f /run/secrets/steam_password ]; then
    STEAM_PASSWORD=$(cat /run/secrets/steam_password)
  else
    error "Missing secret: steam_password"
    exit 1
  fi

  mkdir -p "$install_path/steamapps/compatdata/$steam_app_id"
  export STEAM_COMPAT_CLIENT_INSTALL_PATH="/home/starbound/.steam/steam"
  export STEAM_COMPAT_DATA_PATH="$install_path/steamapps/compatdata/$steam_app_id"
  export STEAM_DIR="/home/starbound/.steam/steam/"

  # Steam login and update
  $steamcmd_path +force_install_dir "$install_path" \
                 +login "$STEAM_USERNAME" "$STEAM_PASSWORD" \
                 +app_update $steam_app_id "$GAME_BRANCH $STEAMCMD_ARGS" \
                 +quit
                 
  # If OpenStarbound is installed, we need to reapply its binaries since SteamCMD update may have overwritten them
  if [ "${USE_OPENSTARBOUND:-false}" == "true" ] && type isOpenStarboundInstalled &>/dev/null && isOpenStarboundInstalled; then
    info "OpenStarbound is installed - reapplying OpenStarbound binaries"
    
    # Copy the OpenStarbound server binaries back to the main Starbound installation
    if [ -d "$osb_installed_path/linux" ]; then
      cp -f "$osb_installed_path/linux/"* "$install_path/linux/"
      info "Reapplied OpenStarbound binaries"
    else
      # Try to find where the binaries are
      find "$osb_installed_path" -name "starbound_server" -exec cp -f {} "$install_path/linux/" \;
      info "Found and reapplied OpenStarbound server binary"
    fi
  fi
}

checkForUpdates() {
  local current_version

  if [ -f "$version_file_path" ]; then
    current_version=$(cat "$version_file_path")
  else
    current_version="0"
  fi

  latest_version=$(curl -sX GET "https://api.steamcmd.net/v1/info/$steam_app_id" | jq -r ".data.\"$steam_app_id\".depots.branches.$GAME_BRANCH.buildid")

  if [ "$latest_version" == "null" ] || [ "$latest_version" == "" ] || [ "$latest_version" == "-1" ]; then
    if [ "$current_version" == "0" ]; then
      warn "Unable to determine latest version of Starbound server! No version currently installed, update server anyways"
      return 0
    fi
    warn "Unable to determine latest version of Starbound server! No update will be performed"
    return 1
  fi

  if [ "$current_version" != "$latest_version" ]; then
    info "Starbound server needs to be updated"
    return 0
  else
    info "Starbound server is already the latest version"
    return 1
  fi
}

main
