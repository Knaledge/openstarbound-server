#!/bin/bash
. "$(dirname "$0")/common"
. "$(dirname "$0")/defaults"

openstarbound_latest_version=-1

checkForOpenStarboundUpdates() {
  if [ "$USE_OPENSTARBOUND" != "true" ]; then
    debug "OpenStarbound is disabled, skipping check"
    return 1
  fi

  local openstarbound_current_version

  if [ -f "$openstarbound_version_file_path" ]; then
    openstarbound_current_version=$(cat "$openstarbound_version_file_path")
    debug "Current OpenStarbound version: $openstarbound_current_version"
  else
    openstarbound_current_version="0"
    debug "No OpenStarbound version file found, setting current version to 0"
  fi

  # Get latest version from GitHub API (tag_name without leading 'v')
  openstarbound_latest_version=$(curl -sX GET "$openstarbound_github_api" | jq -r '.tag_name' | sed 's/^v//')

  if [ "$openstarbound_latest_version" == "null" ] || [ -z "$openstarbound_latest_version" ]; then
    if [ "$openstarbound_current_version" == "0" ]; then
      warn "Unable to determine latest version of OpenStarbound! No version currently installed, will attempt installation"
      return 0
    fi
    warn "Unable to determine latest version of OpenStarbound! No update will be performed"
    return 1
  fi

  debug "Latest OpenStarbound version: $openstarbound_latest_version"
  if [ "$openstarbound_current_version" != "$openstarbound_latest_version" ]; then
    info "OpenStarbound needs to be updated from $openstarbound_current_version to $openstarbound_latest_version"
    return 0
  else
    info "OpenStarbound is already the latest version ($openstarbound_latest_version)"
    return 1
  fi
}

setOpenStarboundCurrentVersion() {
  if [ "$openstarbound_latest_version" == "null" ] || [ -z "$openstarbound_latest_version" ]; then
    warn "Unable to set current OpenStarbound version - latest version is unknown"
    return 1
  fi
  debug "[setOpenStarboundCurrentVersion]: $openstarbound_latest_version"
  echo "$openstarbound_latest_version" > "$openstarbound_version_file_path"
}