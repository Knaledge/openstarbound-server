#!/bin/bash
. "$(dirname "$0")/common"

# Retrieve the latest release information for OpenStarbound server from the GitHub API
response=$(curl -s "https://api.github.com/repos/OpenStarbound/OpenStarbound/releases/latest")

# Extract the tag name and download URL for OpenStarbound server (Linux) using jq
tag_name=$(echo "$response" | jq -r '.tag_name')
openstarbound_download_url=$(echo "$response" | jq -r '.assets[] | select(.name == "OpenStarbound-Linux-Server.zip") | .browser_download_url')

if [ -n "$openstarbound_download_url" ]; then
    echo "Preparing download area for OpenStarbound server (Linux)..."
    mkdir -p $openstarbound_download_path

    echo "Removing previously downloaded OpenStarbound server (Linux) archives..."
    find "$openstarbound_download_path" -mindepth 1 -maxdepth 1 -exec rm -rf -- '{}' +

    echo "Downloading latest OpenStarbound server (Linux) release..."
    curl -L "$openstarbound_download_url" -o $openstarbound_download_path/OpenStarbound-Linux-Server.zip

    echo "Preparing staging area for OpenStarbound server (Linux)..."
    mkdir -p $openstarbound_staging_path

    echo "Removing previously extracted OpenStarbound server (Linux) files..."
    find "$openstarbound_staging_path" -mindepth 1 -maxdepth 1 -exec rm -rf -- '{}' +

    echo "Extracting OpenStarbound server (Linux) to staging area..."
    tar -xzf $openstarbound_download_path/OpenStarbound-Linux-Server.zip -C $openstarbound_staging_path

    echo "Download and extraction of OpenStarbound server (Linux) completed successfully"
else
    echo "No OpenStarbound server (Linux) asset found in the latest release"
    exit 1
fi